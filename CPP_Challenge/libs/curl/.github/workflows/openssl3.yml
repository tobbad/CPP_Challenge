# Copyright (C) 2000 - 2022 Daniel Stenberg, <daniel@haxx.se>, et al.
#
# SPDX-License-Identifier: curl

name: Linux

on:
  # Trigger the workflow on push or pull requests, but only for the
  # master branch
  push:
    branches:
    - master
    - '*/ci'
  pull_request:
    branches:
    - master

jobs:
  autotools:
    name: ${{ matrix.build.name }}
    runs-on: 'ubuntu-latest'
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        build:
        - name: openssl3
          install: libpsl-dev libbrotli-dev libzstd-dev zlib1g-dev
          configure: LDFLAGS="-Wl,-rpath,$HOME/openssl3/lib64" --with-openssl=$HOME/openssl3 --enable-debug
        - name: openssl3-clang
          install: libpsl-dev libbrotli-dev libzstd-dev zlib1g-dev clang
          configure: CC=clang LDFLAGS="-Wl,-rpath,$HOME/openssl3/lib64" --with-openssl=$HOME/openssl3 --enable-debug
        - name: openssl3-O3
          install: libpsl-dev libbrotli-dev libzstd-dev zlib1g-dev
          configure: CFLAGS=-O3 LDFLAGS="-Wl,-rpath,$HOME/openssl3/lib64" --with-openssl=$HOME/openssl3 --enable-debug

    steps:
    - run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        sudo apt-get update
        sudo apt-get install libtool autoconf automake pkg-config stunnel4 ${{ matrix.build.install }} gcc-11
        sudo python3 -m pip install impacket
      name: 'install prereqs and impacket'

    - run: |
        git clone --depth=1 https://github.com/openssl/openssl
        cd openssl
        ./config enable-tls1_3 --prefix=$HOME/openssl3
        make install_sw
      name: 'install openssl3'

    - uses: actions/checkout@v3

    - run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
        sudo update-alternatives --set gcc /usr/bin/gcc-11
      name: 'switch to gcc-11'

    - run: gcc --version
      name: 'check gcc version'

    - run: autoreconf -fi
      name: 'autoreconf'

    - run: ./configure --enable-warnings --enable-werror ${{ matrix.build.configure }} --enable-websockets
      name: 'configure'

    - run: make V=1
      name: 'make'

    - run: make V=1 examples
      name: 'make examples'

    - run: make V=1 test-ci
      name: 'test'
      env:
        TFLAGS: "${{ matrix.build.tflags }}"
