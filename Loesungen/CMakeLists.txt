cmake_minimum_required(VERSION 3.10)
set(PROJECTNAME "CPP_Challenge") 
project(${PROJECTNAME} CXX)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_C_STANDARD 99)
include_directories(${PROJECT_SOURCE_DIR})
add_executable(loesung_01 loesung_01.cpp)
set_source_files_properties(library.c  PROPERTIES LANGUAGE C)
add_executable(loesung_02 loesung_02.cpp library.cpp library.h)
add_executable(loesung_03 loesung_03.cpp library.cpp library.h)
add_executable(loesung_04 loesung_04.cpp library.cpp library.h)
add_executable(loesung_05 loesung_05.cpp library.cpp library.h)
add_executable(loesung_06 loesung_06.cpp library.cpp library.h)
add_executable(loesung_07 loesung_07.cpp library.cpp library.h)
add_executable(loesung_08 loesung_08.cpp library.cpp library.h)
add_executable(loesung_09 loesung_09.cpp library.cpp library.h)
add_executable(loesung_10 loesung_10.cpp library.cpp library.h)
add_executable(loesung_11 loesung_11.cpp library.cpp library.h getopt.h)
add_executable(loesung_12 loesung_12.cpp library.cpp library.h getopt.h)
add_executable(prime prime.cpp library.cpp library.h)
target_include_directories(loesung_01 PUBLIC ${POJRCT_BINARY_DIR})
#target_include_directories(CPP_Challenge PUBLIC
#                          "${PROJECT_BINARY_DIR}"
#                          "${PROJECT_SOURCE_DIR}/lib"
#                          )
configure_file(version.in.h version.h)

#add_subdirectory(lib)
#add_library(lib getopt.c)
#list(APPEND EXTRA_LIB lib)
#list(APPEND EXTRA_INCLUDE lib)

#target_link_libraries(loesung_01 STATIC  lib)
